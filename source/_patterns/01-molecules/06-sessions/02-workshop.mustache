<li class="session workshop">
  <div class="title">
    <h1>Choose your own Refactoring Adventure!</h1>
  </div>
  <div class="images">
    <div class="speaker-image">
      <img src="/lib/img/speakers/elyseholladay_14.jpg" alt="Portrait of Elyse Holladay"></div>
    <div class="speaker-image">
      <img src="/lib/img/speakers/jinabolton_14.jpg" alt="Portrait of Jina Bolton"></div>
  </div>
  <div class="section__details">
    <div class="people">
      <div class="person">
        <h3 class="speaker">Elyse Holladay</h3>
        <h3 class="occupation">Developer/Designer, MakerSquare</h3>
      </div>
      <div class="person">
        <h3 class="speaker">Jina Bolton</h3>
        <h3 class="occupation">Senior Product Designer, Salesforce UX</h3>
      </div>
    </div>
    <div class="description">
      <p>
        Whether you’ve been using Sass for a while or are still trying to figure out how to abandon plain CSS, refactoring a large project can be a daunting task. We all know it’s too hard to refactor everything for months and launch it all at once, so how do you begin a multi-step refactoring process?
      </p>
      <p>
        In this four-hour workshop, Jina and Elyse will walk you through the basics of refactoring using Sass. You’ll receive guidelines for how to refactor for clarity, maintainability, efficiency, and DRY code, and learn how to test your changes. They’ll cover ways to break down a refactor into manageable chunks, help you understand how to modularize your CSS, and organize messy code into documented, style-guide ready files. Everyone will leave with a customized game plan of steps, tools, and guidelines to refactor their project—not a sample app—so bring your project code with you.
      </p>
      <h2>Refactoring topics to be covered may include:</h2>
      <ul>
        <li>
          overview of ways to use Sass (CodeKit, Rails, libsass, nodesass, etc.)
        </li>
        <li>creating color and typography variables</li>
        <li>breaking out and importing files</li>
        <li>
          determining CSS/UI modules, where they live in your app, and how to organize them
        </li>
        <li>namespacing for style safety</li>
        <li>commenting and in-CSS documentation</li>
        <li>creating living style guides</li>
        <li>naming conventions and refactoring classes/IDs</li>
        <li>testing for changes</li>
      </ul>
    </div>
  </div>
</li>
